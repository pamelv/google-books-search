{"ast":null,"code":"var _jsxFileName = \"/Users/pamelavasquez/bootcamp/google-books-search/client/src/pages/BookSearch.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport API from \"../utils/booksapi\";\nexport default function BookSearch() {\n  var _this = this;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n    searchBook(data);\n  };\n\n  var books = [];\n\n  var searchBook = function searchBook(data) {\n    console.log(data);\n    API.getBooks(data.search).then(function (res) {\n      var results = res.data.items;\n      results.forEach(function (result) {\n        books.push(result.volumeInfo);\n      });\n      console.log(books);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"search\",\n    name: \"search\",\n    placeholder: \"Title or Author\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    placeholder: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), books.map(function (book) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: book.publishedDate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, book.title));\n  }));\n}","map":{"version":3,"sources":["/Users/pamelavasquez/bootcamp/google-books-search/client/src/pages/BookSearch.js"],"names":["React","useForm","API","BookSearch","register","handleSubmit","errors","onSubmit","data","console","log","searchBook","books","getBooks","search","then","res","results","items","forEach","result","push","volumeInfo","catch","error","required","map","book","publishedDate","title"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAAA,iBACQF,OAAO,EADf;AAAA,MAC3BG,QAD2B,YAC3BA,QAD2B;AAAA,MACjBC,YADiB,YACjBA,YADiB;AAAA,MACHC,MADG,YACHA,MADG;;AAGnC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,UAAU,CAACH,IAAD,CAAV;AACD,GAHD;;AAIA,MAAMI,KAAK,GAAG,EAAd;;AACA,MAAMD,UAAU,GAAG,SAAbA,UAAa,CAACH,IAAD,EAAU;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,IAAAA,GAAG,CAACW,QAAJ,CAAaL,IAAI,CAACM,MAAlB,EACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACb,UAAIC,OAAO,GAAGD,GAAG,CAACR,IAAJ,CAASU,KAAvB;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1BR,QAAAA,KAAK,CAACS,IAAN,CAAWD,MAAM,CAACE,UAAlB;AACD,OAFD;AAGAb,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAPH,EAQGW,KARH,CAQS,UAACC,KAAD,EAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,KAVH;AAWD,GAbD;;AAeA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEnB,YAAY,CAACE,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,QAFL;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEqB,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAYGb,KAAK,CAACc,GAAN,CAAU,UAACC,IAAD;AAAA,wBACT;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADS;AAAA,GAAV,CAZH,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport API from \"../utils/booksapi\";\n\nexport default function BookSearch() {\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = (data) => {\n    console.log(data);\n    searchBook(data);\n  };\n  const books = [];\n  const searchBook = (data) => {\n    console.log(data);\n    API.getBooks(data.search)\n      .then((res) => {\n        var results = res.data.items;\n        results.forEach((result) => {\n          books.push(result.volumeInfo);\n        });\n        console.log(books);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          placeholder=\"Title or Author\"\n          ref={register({ required: true })}\n        />\n        <input type=\"submit\" placeholder=\"search\" />\n      </form>\n\n      {books.map((book) => (\n        <div key={book.publishedDate}>\n          <p>{book.title}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}